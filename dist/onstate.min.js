/* onstate 0.5.1 - https://github.com/passpill-io/onState */
!function(t,e){"function"==typeof define&&define.amd?define(["exports","onState"],e):"object"==typeof exports?module.exports=e():t.onState=e()}(this,function(){"use strict";const t=new Set(["_mark","state"]);var e,n=[];function r(){for(var t;t=n.shift();)t()}if("undefined"!=typeof window){let t=window.origin;t&&"null"!==t||(t="*"),window.addEventListener("message",function(t){"now"===t.data&&r()}),e=window.postMessage.bind(window,"now",t)}else e=function(){process.nextTick(r)};var i=function(t){return n.push(t),e(),1};function o(t,e){var n=s(t);return delete t.__.splicing,e?t.__.update=d(n):delete t.__.clbks._mark,t.emit("state",n),n}var a={set:function(t,e,n){!this.__.init&&n&&n.__&&n.__.parent&&!this.__.splicing&&function(t){throw new Error(t)}("Can't add an oS node to another oS object."),n&&!n.__&&(n.on||n.emit)&&f("Adding an object with `on` or `emit` attributes. They will be overriden.");var r=n instanceof Object,i=r?_(n):n;if(r&&(i.__.parent=this.__),this.__.init)t[e]=i;else{var o=this.__.update;o||(o=this.__.update=d(t)),o[e]=i,u(this.__,"_mark")}return!0},deleteProperty:function(t,e){var n=this.__.update;return n||(n=this.__.update=d(t)),delete n[e],u(this.__,"_mark"),!0},get:function(t,e){var n=this.__.update||t;return n.splice&&"splice"===e&&(this.__.splicing=!0),"__"===e?this.__:c[e]?c[e]:n[e]||n.hasOwnProperty(e)?n[e]:Reflect.get(n,e)}};function s(t,e){var n,r,s=t.splice?[]:{},_={parent:!1,clbks:{},timer:!1,init:!0},c=Object.assign({__:_},a),f=t;if(t&&(r=t.__)&&r.clbks)for(l in n=r.marked,f=r.update||t,r.parent&&delete r.update,r.clbks)"_mark"!==l&&(_.clbks[l]=r.clbks[l]);var d,l,p=new Proxy(s,c);for(l in d=n?function(t){return n.has(t)?o(t):t}:function(t){return t},f)p[l]=d(f[l]);return delete _.init,p.on("_mark",function(){!function(t){var e=t.__.parent;if(e){var n=e.marked||new Set;n.add(t),e.marked=n,u(e,"_mark")}else t.__.timer||(t.__.timer=i(()=>{delete t.__.timer,o(t,!0)}))}(p)}),p}function _(t){return function(t){return t&&t.__}(t)?t:s(t)}var c={on:function(t,e){return t?"function"!=typeof e?f("No listener provided for the event '"+t+"'."):void(this.__.clbks[t]?this.__.clbks[t].push(e):this.__.clbks[t]=[e]):f("Can't add listener for a falsy event.")},off:function(t,e){var n=this.__.clbks[t],r="Couldn't find the listener to remove from the event '"+t+"'.";if(!n)return f(r);var i=n.indexOf(e);-1!==i?n.splice(i,1):f(r)},emit:function(e){var n=Array.from(arguments),r=u.apply(null,[this.__].concat(n));if(t.has(e))return r;for(var i=this.__.parent;i;)u.apply(null,[i].concat(n)),i=i.parent;return r}};function u(t,e){if(t.clbks[e]){var n,r,i=Array.from(arguments).slice(2);return t.clbks[e].forEach(t=>{void 0!==(r=t.apply(null,i))&&(n=r)}),n}"_mark"===e&&f("Changing a detached node. It won't emit `state` events.")}function f(t){console.warn("onState WARNING: "+t)}function d(t){if(t.slice)return t.slice();var e={};for(var n in t)e[n]=t[n];return e}return _});